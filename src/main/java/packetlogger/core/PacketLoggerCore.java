package packetlogger.core;

import java.util.Map;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.network.play.server.S35PacketUpdateTileEntity;
import net.minecraft.network.play.server.S3FPacketCustomPayload;

import com.google.common.eventbus.EventBus;

import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.LoadController;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.relauncher.FMLRelaunchLog;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin.MCVersion;

/**
 * Load with -Dfml.coreMods.load=packetlogger.core.PacketLoggerCore
 */
@MCVersion("1.7.10")
public class PacketLoggerCore extends DummyModContainer implements IFMLLoadingPlugin
{

	public static final String MODID = "packetlogger";
	public static final String NAME = "Packet Logger";
	public static final String VERSION = "@version@";

	protected final ModMetadata md = new ModMetadata();

	public PacketLoggerCore() {
		FMLRelaunchLog.info( "[PacketLogger] Loaded" );
		md.autogenerated = false;
		md.credits = "AlgorithmX2";
		md.modId = getModId();
		md.version = getVersion();
		md.name = getName();
	}

	@Override
	public String[] getASMTransformerClass()
	{
		return null;
	}

	@Override
	public String getModContainerClass()
	{
		return "packetlogger.core.PacketLoggerCore";
	}

	@Override
	public String getSetupClass()
	{
		return null;
	}

	@Override
	public void injectData(Map<String, Object> data)
	{

	}

	@Override
	public boolean registerBus(EventBus bus, LoadController controller)
	{
		return true;
	}

	@Override
	public String getModId()
	{
		return MODID;
	}

	@Override
	public String getName()
	{
		return NAME;
	}

	@Override
	public String getVersion()
	{
		return VERSION;
	}

	@Override
	public String getDisplayVersion()
	{
		return getVersion();
	}

	@Override
	public ModMetadata getMetadata()
	{
		return md;
	}

	@Override
	public String getAccessTransformerClass()
	{
		return "packetlogger.core.Transformer";
	}

}
